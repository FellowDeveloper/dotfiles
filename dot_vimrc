" Automatically change directory to current buffer
" set autochdir 

" Gray status bar for inactive windows:
highlight StatusLineNC cterm=bold ctermfg=white ctermbg=darkgray

let mapleader = ' '

" Quick replace in file:
" 1. Press * to search for word uner cursor
" 2. Press shortcut below to replace all instances in the current file
nnoremap <Leader>r :%s///g<Left><Left>

" Quick replace in file (visual mode):
"   press * to search for word uner cursor or a visual selection
"   press shortcut below to replace all instances in the current file
xnoremap <Leader>r :%s///g<Left><Left>

set number " show line numbers
" set hlsearch " highlight searches
set incsearch " show search matches as you type

if has('nvim')
  tnoremap <M-[> <C-\><C-n> " Get out of terminal
  tnoremap <C-v><Esc> <Esc> " Send <Esc> to program in terminal with <C-v><Esc>
endif

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Invisible characters. Show trailing whitespace and tab
set list " show invisible characters
" define characters for invisibles
"set listchars=tab:>Â·,trail:~,extends:>,precedes:<

" toggle invisible characters display
nmap <leader>l :set list!<CR>

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" set tab & shift to 4 spaces, replace tabs with spaces
set ts=4
set sts=4
set sw=4
set expandtab
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" yank to clipboard
if has("clipboard")
  set clipboard=unnamed " copy to the system clipboard
  if has("unnamedplus") " X11 support
    set clipboard+=unnamedplus
  endif
endif

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Plugins
packadd minpac

command! PackUpdate call minpac#update()
command! PackClean call minpac#clean()

call minpac#init()

call minpac#add('tpope/vim-unimpaired')
call minpac#add('junegunn/fzf')
call minpac#add('junegunn/fzf.vim')
call minpac#add('preservim/nerdtree')
call minpac#add('k-takata/minpac', {'type': 'opt'})

function! IBGSFzf(query, fullscreen)  
  let command_fmt = '/bin/bash -c "/opt/facebook/bin/biggrep/ibgs -i %s | '. "sed 's/^fbsource[/]//'" . '"'
  let initial_command = printf(command_fmt, shellescape(a:query))
  let reload_command = printf(command_fmt, '{q}')
  let spec = {'options': ['--phony', '--query', a:query, '--bind', 'change:reload:'.reload_command]}
  call fzf#vim#grep(initial_command, 0, fzf#vim#with_preview(spec), a:fullscreen)
endfunction
command! -nargs=* -bang IBGS call IBGSFzf(<q-args>, <bang>0)

function! IBGFFzf(query, fullscreen)
  let command_fmt = '/bin/bash -c "/opt/facebook/bin/biggrep/ibgf -i %s | '. "sed 's/^fbsource[/]//'" . '"'
  let initial_command = printf(command_fmt, shellescape(a:query))
  let reload_command = printf(command_fmt, '{q}')
  call fzf#run(fzf#wrap(fzf#vim#with_preview({
        \ 'source': initial_command,
        \ 'sink': 'e',
        \ 'options': ['--phony', '--query', a:query, '--bind', 'change:reload:'.reload_command]
        \})))
endfunction
command! -nargs=* -bang IBGF call IBGFFzf(<q-args>, <bang>0)

